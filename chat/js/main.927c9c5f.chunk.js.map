{"version":3,"sources":["../../React-Chat-master/src/components/RoomList.js","../../React-Chat-master/src/components/Message.js","../../React-Chat-master/src/components/MessageList.js","../../React-Chat-master/src/components/SendMessageForm.js","../../React-Chat-master/src/components/NewRoomForm.js","../../React-Chat-master/src/components/Account.js","../../React-Chat-master/src/ChatApp.js","../../React-Chat-master/src/components/Error.js","../../React-Chat-master/src/App.js","../../React-Chat-master/src/config.js","../../React-Chat-master/src/serviceWorker.js","../../React-Chat-master/src/index.js"],"names":["RoomList","_this","this","orderedRooms","Object","toConsumableArray","props","rooms","sort","a","b","id","length","react_default","createElement","className","map","room","active","roomId","key","href","name","onClick","subscribeToRoom","isPrivate","React","Component","Message","username","text","MessageList","node","ReactDom","findDOMNode","shouldScrollBottom","scrollTop","clientHeight","scrollHeight","ComponentMeseges","messages","message","index","components_Message","senderId","role","aria-label","SendMessageForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","value","preventDefault","sendMessage","onSubmit","onChange","type","placeholder","disable","disabled","NewRoomForm","createRoom","required","Account","user","ChatApp","joinableRooms","joinedRooms","getRooms","currentUser","_this2","getJoinableRooms","then","catch","err","console","log","_this3","hooks","onMessage","concat","_this4","components_RoomList","components_Account","components_MessageList","components_SendMessageForm","components_NewRoomForm","Error","error","code","description","App","userId","success","e","tokenProvider","Chatkit","TokenProvider","url","ChatManager","instanceLocator","connect","statusCode","info","error_description","src_ChatApp","components_Error","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.927c9c5f.chunk.js","sourcesContent":["import React from 'react';\n\nclass RoomList extends React.Component {\n    render() {\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id > b.id);\n        if(orderedRooms.length === 0) {\n            return(\n                <div className=\"rooms-list\">\n                    <i className=\"fas fa-sync\"></i>\n                </div>\n            );\n        }\n        \n        return(\n            <div className=\"rooms-list\">\n                <ul>\n                    {\n                        orderedRooms.map(room => {\n                            const active = this.props.roomId === room.id ? \"active\" : \"\";\n                            return(\n                                <li key={room.id} className={active}>\n                                    \n                                    <a \n                                        href={\"#\" + room.name}\n                                        onClick={() => this.props.subscribeToRoom(room.id)} \n                                    >\n                                        <span className={room.isPrivate ? \"private\" : \"public\"}/>\n                                        {room.name}\n                                    </a>\n                                    \n                                </li>\n                            )}\n                        )\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default RoomList;","import React from 'react';\n\nfunction Message(props){\n    return(\n        <div className=\"message\">\n                <div className=\"message-username\">{props.username}</div>\n                <div className=\"message-text\">{props.text}</div>\n        </div>\n    );\n}\n\nexport default Message;","import React from 'react';\nimport Message from './Message';\nimport ReactDom from 'react-dom';\n\nclass MessageList extends React.Component {\n\n    componentWillUpdate(){\n        const node = ReactDom.findDOMNode(this);\n        this.shouldScrollBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight;\n    }\n    componentDidUpdate(){\n        if(this.shouldScrollBottom){\n            const node = ReactDom.findDOMNode(this);\n            node.scrollTop = node.scrollHeight;\n        }\n    }\n   render() {\n    if(this.props.roomId === null) {\n        return(\n            <div className=\"message-list\">\n                <div className=\"select-room\">\n                    <div className=\"main\">\n                        <p>Please select room or create one!</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const ComponentMeseges = this.props.messages.map((message, index) => {\n        return(\n            <Message\n                key={index}\n                username={message.senderId}\n                text={message.text}\n            />\n        )\n    });\n\n    if(ComponentMeseges.length === 0){\n        return(\n            <div className=\"message-list\">\n                <div className=\"select-room\">\n                    <div className=\"main\">\n                        <span role=\"img\" aria-label=\"write-emoji\">✏️</span>\n                        <p>Write first message!</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return(\n        <div className=\"message-list\">\n            {ComponentMeseges}\n        </div>\n    );\n   }\n   \n}\n\nexport default MessageList;","import React from 'react';\n\nclass SendMessageForm extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            message: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            message: event.target.value\n        });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        this.props.sendMessage(this.state.message);\n        this.setState({\n            message: ''\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"send-message-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.message}\n                        type=\"text\" \n                        placeholder={this.props.disable ? \"Select room\" : \"Start typing...\" }\n                        disabled={this.props.disable}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SendMessageForm;","import React from 'react';\n\nclass NewRoomForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            message: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({message: event.target.value});\n    }    \n    handleSubmit(event){\n        event.preventDefault();\n        this.props.createRoom(this.state.message);\n        this.setState({message: ''});\n    }\n    render(){\n        return(\n            <div className=\"new-room-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Create New Room\"\n                        value={this.state.message}\n                        onChange={this.handleChange}\n                        required\n                    />\n                    <button type=\"submit\">+</button>\n                </form>\n            </div>\n        );\n    }\n}\n  \nexport default NewRoomForm;","import React from 'react';\n\nfunction Account(props){\n    return(\n        <div className=\"account\">\n            <div className=\"user\">\n                \n                <h1>{props.user.name}</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Account;","import React, { Component } from 'react';\n\nimport RoomList from './components/RoomList';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport NewRoomForm from './components/NewRoomForm';\nimport Account from './components/Account';\n\nclass ChatApp extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      roomId: null,\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: [],\n      user: {\n          id:'',\n          name: ''\n      }\n    }\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subscribeToRoom = this.subscribeToRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.createRoom = this.createRoom.bind(this);\n  }\n\n  componentDidMount(){\n    this.getRooms();\n    this.setState({\n        user: { \n            id: this.props.currentUser.id,\n            name: this.props.currentUser.name \n        }})\n  }\n\n  getRooms(){\n      this.props.currentUser.getJoinableRooms()\n      .then(joinableRooms => {\n        this.setState({\n          joinableRooms,\n          joinedRooms: this.props.currentUser.rooms\n        })\n      })\n      .catch(err => console.log(err));\n  }\n\n  subscribeToRoom(id){\n    this.setState({messages:[]});\n    this.props.currentUser.subscribeToRoom({\n      roomId: id,\n      hooks: {\n          onMessage: message => {\n              this.setState({\n                messages: [...this.state.messages, message]\n              })\n          }\n        }\n    })\n    .then(room => {\n      this.setState({ roomId: room.id });\n      this.getRooms();\n    })\n    .catch(err => console.log(err));\n    \n  }\n\n  sendMessage(text){\n    this.props.currentUser.sendMessage({\n      text: text,\n      roomId: this.state.roomId\n    })\n    .catch(err => console.log(err));\n  }\n\n  createRoom(name){\n    this.props.currentUser.createRoom({\n      name\n    })\n    .then(room => this.subscribeToRoom(room.id))\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n          <RoomList \n            roomId={this.state.roomId}\n            subscribeToRoom={this.subscribeToRoom}\n            rooms={ [...this.state.joinableRooms, ...this.state.joinedRooms] }\n          />\n          <Account user={this.state.user} />\n          <MessageList roomId={this.state.roomId} messages={this.state.messages} />\n          <SendMessageForm disable={!this.state.roomId} sendMessage={this.sendMessage}/>\n          <NewRoomForm createRoom={this.createRoom} />\n      </div>\n    );\n  }\n}\n\nexport default ChatApp;","import React from 'react';\n\nfunction Error(props){\n    return(\n        <div className=\"error-box\">\n            <p>{props.error.code}</p>\n            <p>{props.error.description}</p>\n        </div>\n    );\n}\n\nexport default Error;\n\n\n\n","import React, { Component } from 'react';\n\nimport Chatkit from '@pusher/chatkit-client';\nimport {tokenUrl, instanceLocator} from './config.js';\n\nimport ChatApp from './ChatApp';\nimport Error from './components/Error';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      userId: 'Mayow',\n      success: false,\n      error: {\n        code: 0,\n        description: \"\"\n      }\n    }\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    this.setState({userId: e.target.value});\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const tokenProvider = new Chatkit.TokenProvider({\n      url: tokenUrl\n    });\n    \n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: instanceLocator,\n      userId: this.state.userId,\n      tokenProvider: tokenProvider\n    });\n\n    chatManager.connect()\n      .then(currentUser => {\n        this.currentUser = currentUser;\n        this.setState({success: true});\n      })\n      .catch(error => {\n        this.setState({\n          error: {\n            code: error.statusCode,\n            description: error.info.error_description\n          }\n        })\n      })\n  }\n\n  render() {\n    \n    if(this.state.success) return <ChatApp currentUser={this.currentUser} />\n    else return(\n      <div className=\"login\">\n\n       {this.state.error.code !== 0 ? <Error error={this.state.error} /> : \"\"}\n\n        <form className=\"login-form\" onSubmit={this.handleSubmit}>\n          <input \n            type=\"text\" \n            value={this.state.userId}\n            onChange={this.handleChange}\n            placeholder=\"Enter existing username\"\n          />\n          <p>Type Mayow and enter</p>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default App;","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/61b7e370-b59e-4008-99ca-131d5aaafb8a/token\";\n/** swap out */\nconst instanceLocator = \"v1:us1:61b7e370-b59e-4008-99ca-131d5aaafb8a\";\n\nexport { tokenUrl, instanceLocator }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}